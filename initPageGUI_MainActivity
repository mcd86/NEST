package com.example.toastlistviewexample4;


import java.util.Calendar;

import android.app.Activity;
import android.app.Dialog;
import android.app.TimePickerDialog;
import android.content.Intent;
import android.os.Bundle;
import android.view.Menu;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemSelectedListener;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.Spinner;
import android.widget.TextView;
import android.widget.TimePicker;

public class MainActivity extends Activity {

	// Widgets - GUI
    Spinner spBuildingName;
    private TextView tvStartOut;
    public Button btnChStart;
    private TextView tvEndOut;
    public Button btnChEnd;
    
    private int hour;
    private int minute;
    static final int TIME_DIALOG_ID = 1111;
       

    // Adapter
    ArrayAdapter<String> adptBuildingName;
 
    /** Called when the activity is first created. */
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        
        
        // set adapter
        String[] buildingNames = getResources().getStringArray(R.array.buildingNames);
        
        // Initialize Widgets
       spBuildingName = (Spinner) findViewById(R.id.buildingSpinner);
       tvStartOut = (TextView) findViewById(R.id.startOutTextView);
       tvEndOut = (TextView) findViewById(R.id.endOutTextView);
       
       adptBuildingName = new ArrayAdapter<String>(this, android.R.layout.simple_spinner_item, buildingNames);
       spBuildingName.setAdapter(adptBuildingName);
        
        
        // Building Name Item selected Listener        
        spBuildingName.setOnItemSelectedListener(new OnItemSelectedListener(){
        	@Override
        	public void onItemSelected(AdapterView<?> adapter, View v, int pos, long id){
        		//On selecting a spinner item...
        		String item = adapter.getItemAtPosition(pos).toString();	
        	}
        	@Override
            public void onNothingSelected(AdapterView<?> arg0) {
        		// TODO Auto-generated method stub
                 }
        });
        
        // Display current time on screen Start
        final Calendar c = Calendar.getInstance();
        // Current Hour
        hour = c.get(Calendar.HOUR_OF_DAY);
        // Current Minute
        minute = c.get(Calendar.MINUTE);
        
        // Set current time into start time text view
        UpdateTime(hour, minute);
        
        // Display current time on screen end
        
        // Add button click listener
        addStartButtonClickListener();
        addEndButtonClickListener();
        
        
        final Dialog dialog = new Dialog(this);
        final Dialog nameDialog = new Dialog(this);
        dialog.setContentView(R.layout.init_toast);
        nameDialog.setContentView(R.layout.name_dialog);
        dialog.setTitle("Hello!");
        nameDialog.setTitle("NEST");
        
        TextView tv2 = (TextView) nameDialog.findViewById(R.id.initAlertNameTextView);
        TextView tv = (TextView) dialog.findViewById(R.id.initAlertTextView);
  
        tv2.setText("Please enter you name: ");
        tv.setText("Before you start using NEST, please take a few short minutes to set up your class schedule.");
        
        Button btnInit2 = (Button) nameDialog.findViewById(R.id.initAlertNameButton);
        btnInit2.setOnClickListener(new OnClickListener(){
        	@Override
        	public void onClick(View v){
        		nameDialog.dismiss();
        	}
        });
        
        Button btnInit = (Button) dialog.findViewById(R.id.initAlertButton);
        btnInit.setOnClickListener(new OnClickListener(){
        	@Override
        	public void onClick(View v){
        		dialog.dismiss();
        	}
        });
        
        dialog.show();
        nameDialog.show();
    }
    
    public void addStartButtonClickListener(){
    	btnChStart = (Button) findViewById(R.id.chStartTimeButton);
    	btnChStart.setOnClickListener(new OnClickListener(){
    		
			@SuppressWarnings("deprecation")
			@Override
    		public void onClick(View v){
    			showDialog(TIME_DIALOG_ID);
    		}
    	});
    }
    public void addEndButtonClickListener(){
        	btnChEnd = (Button) findViewById(R.id.chEndTimeButton);
        	btnChEnd.setOnClickListener(new OnClickListener(){
        		
    			@SuppressWarnings("deprecation")
    			@Override
        		public void onClick(View v){
        			showDialog(TIME_DIALOG_ID);
        		}
        	});
    }
    
    @Override
    protected Dialog onCreateDialog(int id){
    	switch (id){
    	case TIME_DIALOG_ID:
    	// set time picker as current time
    	return new TimePickerDialog(this, timePickerListener, hour, minute, false);
    	}
    	return null;
    }
    
    private TimePickerDialog.OnTimeSetListener timePickerListener = new TimePickerDialog.OnTimeSetListener() {
		
		@Override
		public void onTimeSet(TimePicker view, int hourOfDay, int minutes) {
			// TODO Auto-generated method stub
			hour = hourOfDay;
			minute = minutes;
			
			UpdateTime(hour, minute);
			
		}
	};
	
	private static String UtilTime(int value){
		if(value<10)
			return"0" + String.valueOf(value);
		else
			return String.valueOf(value);
	}
	
	// Used to convert 24hr format to 12 hr format
	private void UpdateTime(int hours, int mins){
		
		String timeSet="";
		if (hours> 12){
			hours -= 12;
			timeSet = "PM";
		}else if (hours == 0) {
			hours += 12;
			timeSet = "AM";
		}else if (hours == 12){
			timeSet="PM";
		}else
			timeSet="AM";
		
		String minutes = "";
		if (mins<10)
			minutes = "0" +mins;
		else
			minutes =String.valueOf(mins);
		
		// Append in a string builder
		String aTime = new StringBuilder().append(hours).append(":").append(minutes).append(" ").append(timeSet).toString();
		
		tvStartOut.setText(aTime);
		tvEndOut.setText(aTime);
	}
/*	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
	}*/

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}
	public void testMainMenu(View view){
		Intent intent = new Intent(this, MainMenuActivity.class);
		startActivity(intent);
	}
}
